barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.5)
##############################################################
# For the PGExplainer ########################################
folder <- "graphs_5_7"
path   <- paste(folder,"/dataset/graph0_edges.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste("./",folder,"/pg_results/", sep="")
files  <- list.files(path2, full.names = TRUE)
RES <- vector("list", length(files))
for(xx in 1:length(files)){
RES[[xx]] <- read.csv(files[xx], header=FALSE)
}
SCORES <- abs(RES[[1]]) #t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.5)
SCORES <- abs(RES[[1]]) #t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
##############################################################
# For the PGExplainer ########################################
folder <- "graphs_0_3"
path   <- paste(folder,"/dataset/graph0_edges.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste("./",folder,"/pg_results/", sep="")
files  <- list.files(path2, full.names = TRUE)
RES <- vector("list", length(files))
for(xx in 1:length(files)){
RES[[xx]] <- read.csv(files[xx], header=FALSE)
}
SCORES <- abs(RES[[1]]) #t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.5)
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
PG_CalcEdgeImportance <- function(EdgeScores, Edges){
EDGE_SCORES <- rep(NaN,dim(Edges)[2])
for(xx in 1:dim(Edges)[2]){
node1 <- Edges[1,xx]
node2 <- Edges[2,xx]
ids1  <- which((Edges[1,]==node1) | (Edges[1,]==node2) )
ids2  <- which((Edges[2,]==node1) | (Edges[2,]==node2) )
ES <- EdgeScores[,unique(c(ids1,ids2))]
EDGE_SCORES[xx] <- mean(apply(ES,2,mean))
}
return(EDGE_SCORES)
}
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.5)
folder <- "graphs_14_17"
path   <- paste(folder,"/dataset/graph0_edges.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste("./",folder,"/pg_results/", sep="")
files  <- list.files(path2, full.names = TRUE)
RES <- vector("list", length(files))
for(xx in 1:length(files)){
RES[[xx]] <- read.csv(files[xx], header=FALSE)
}
SCORES <- abs(RES[[1]]) #t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
PG_CalcEdgeImportance <- function(EdgeScores, Edges){
EDGE_SCORES <- rep(NaN,dim(Edges)[2])
for(xx in 1:dim(Edges)[2]){
node1 <- Edges[1,xx]
node2 <- Edges[2,xx]
ids1  <- which((Edges[1,]==node1) | (Edges[1,]==node2) )
ids2  <- which((Edges[2,]==node1) | (Edges[2,]==node2) )
ES <- EdgeScores[,unique(c(ids1,ids2))]
EDGE_SCORES[xx] <- mean(apply(ES,2,mean))
}
return(EDGE_SCORES)
}
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
##############################################################
# For the PGExplainer ########################################
folder <- "graphs_5_6"
path   <- paste(folder,"/dataset/graph0_edges.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste("./",folder,"/pg_results/", sep="")
files  <- list.files(path2, full.names = TRUE)
RES <- vector("list", length(files))
for(xx in 1:length(files)){
RES[[xx]] <- read.csv(files[xx], header=FALSE)
}
SCORES <- abs(RES[[1]]) #t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
##############################################################
# For the PGExplainer ########################################
folder <- "graphs_1_5"
path   <- paste(folder,"/dataset/graph0_edges.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste("./",folder,"/pg_results/", sep="")
files  <- list.files(path2, full.names = TRUE)
RES <- vector("list", length(files))
for(xx in 1:length(files)){
RES[[xx]] <- read.csv(files[xx], header=FALSE)
}
SCORES <- abs(RES[[1]]) #t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
PG_CalcEdgeImportance <- function(EdgeScores, Edges){
EDGE_SCORES <- rep(NaN,dim(Edges)[2])
for(xx in 1:dim(Edges)[2]){
node1 <- Edges[1,xx]
node2 <- Edges[2,xx]
ids1  <- which((Edges[1,]==node1) | (Edges[1,]==node2) )
ids2  <- which((Edges[2,]==node1) | (Edges[2,]==node2) )
ES <- EdgeScores[,unique(c(ids1,ids2))]
EDGE_SCORES[xx] <- max(apply(ES,2,mean))
}
return(EDGE_SCORES)
}
# For the PGExplainer ########################################
folder <- "graphs_1_5"
path   <- paste(folder,"/dataset/graph0_edges.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste("./",folder,"/pg_results/", sep="")
files  <- list.files(path2, full.names = TRUE)
RES <- vector("list", length(files))
for(xx in 1:length(files)){
RES[[xx]] <- read.csv(files[xx], header=FALSE)
}
SCORES <- abs(RES[[1]]) #t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
PG_CalcEdgeImportance <- function(EdgeScores, Edges){
EDGE_SCORES <- rep(NaN,dim(Edges)[2])
for(xx in 1:dim(Edges)[2]){
node1 <- Edges[1,xx]
node2 <- Edges[2,xx]
ids1  <- which((Edges[1,]==node1) | (Edges[1,]==node2) )
ids2  <- which((Edges[2,]==node1) | (Edges[2,]==node2) )
ES <- EdgeScores[,unique(c(ids1,ids2))]
EDGE_SCORES[xx] <- median(apply(ES,2,mean))
}
return(EDGE_SCORES)
}
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
PG_CalcEdgeImportance <- function(EdgeScores, Edges){
EDGE_SCORES <- rep(NaN,dim(Edges)[2])
for(xx in 1:dim(Edges)[2]){
node1 <- Edges[1,xx]
node2 <- Edges[2,xx]
ids1  <- which((Edges[1,]==node1) | (Edges[1,]==node2) )
ids2  <- which((Edges[2,]==node1) | (Edges[2,]==node2) )
ES <- EdgeScores[,unique(c(ids1,ids2))]
EDGE_SCORES[xx] <- max(apply(ES,2,mean))
}
return(EDGE_SCORES)
}
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
PG_CalcEdgeImportance <- function(EdgeScores, Edges){
EDGE_SCORES <- rep(NaN,dim(Edges)[2])
for(xx in 1:dim(Edges)[2]){
node1 <- Edges[1,xx]
node2 <- Edges[2,xx]
ids1  <- which((Edges[1,]==node1) | (Edges[1,]==node2) )
ids2  <- which((Edges[2,]==node1) | (Edges[2,]==node2) )
ES <- EdgeScores[,unique(c(ids1,ids2))]
EDGE_SCORES[xx] <- max(apply(ES,2,median))
}
return(EDGE_SCORES)
}
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
##############################################################
# For the PGExplainer ########################################
folder <- "graphs_2_20"
path   <- paste(folder,"/dataset/graph0_edges.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste("./",folder,"/pg_results/", sep="")
files  <- list.files(path2, full.names = TRUE)
RES <- vector("list", length(files))
for(xx in 1:length(files)){
RES[[xx]] <- read.csv(files[xx], header=FALSE)
}
SCORES <- abs(RES[[1]]) #t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
##############################################################
# For the PGExplainer ########################################
folder <- "graphs_1_26"
path   <- paste(folder,"/dataset/graph0_edges.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste("./",folder,"/pg_results/", sep="")
files  <- list.files(path2, full.names = TRUE)
RES <- vector("list", length(files))
for(xx in 1:length(files)){
RES[[xx]] <- read.csv(files[xx], header=FALSE)
}
SCORES <- abs(RES[[1]]) #t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
##############################################################
# For the PGExplainer ########################################
folder <- "graphs_3_7"
path   <- paste(folder,"/dataset/graph0_edges.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste("./",folder,"/pg_results/", sep="")
files  <- list.files(path2, full.names = TRUE)
RES <- vector("list", length(files))
for(xx in 1:length(files)){
RES[[xx]] <- read.csv(files[xx], header=FALSE)
}
SCORES <- abs(RES[[1]]) #t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
range01        <- function(x){(x-min(x))/(max(x)-min(x))}
SCORES2 <- t(apply(SCORES,1,range01))
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
boxplot(SCORES2, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, cex.axis=0.6)
PG_CalcEdgeImportance <- function(EdgeScores, Edges){
EDGE_SCORES <- rep(NaN,dim(Edges)[2])
for(xx in 1:dim(Edges)[2]){
node1 <- Edges[1,xx]
node2 <- Edges[2,xx]
ids1  <- which((Edges[1,]==node1) | (Edges[1,]==node2) )
ids2  <- which((Edges[2,]==node1) | (Edges[2,]==node2) )
ES <- EdgeScores[,unique(c(ids1,ids2))]
EDGE_SCORES[xx] <- mean(apply(ES,2,mean))
}
return(EDGE_SCORES)
}
newScores <- PG_CalcEdgeImportance(SCORES2, edges_raw)
names(newScores) <- edges
barplot(sort(newScores, decreasing=TRUE), las=2, cex.names=0.6)
q()
source("ImportancePlot.R")
ImportancePlot("graphs_2_16")
ImportancePlot("graphs_9_18")
ImportancePlot("graphs_1_19")
ImportancePlot("graphs_22_27")
q()
source("ImportancePlot.R")
ImportancePlot("KIRC")
folder <- KIRC
folder <- "KIRC"
# R plots
# For our modified GNNexplainer #############################
#folder <- "graphs_5_18"
path       <- paste(folder,"/edge_index.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste(folder,"", sep="")
files  <- list.files(path2, full.names = TRUE)
files
#####################
# Node Importance
#####################
par(mfrow=c(2,1))
filesX  <- files[grep("gnn_feature_mask", files)]
RES <- vector("list", length(filesX))
for(xx in 1:length(filesX)){
RES[[xx]] <- read.csv(filesX[xx], header=FALSE)
}
filesX
length(RES)
SCORES <- t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
boxplot(SCORES, outline=FALSE, boxwex=0.4, 
color="white", names=0:(dim(SCORES)[2]-1), las=2, xlab="Nodes", 
ylab="Node Importance", col="cadetblue")
dim(SCORES)
filesX  <- files[grep("gnn_edge_mask", files)]
RES <- vector("list", length(filesX))
for(xx in 1:length(filesX)){
RES[[xx]] <- read.csv(filesX[xx], header=FALSE)
}
SCORES <- t(do.call("cbind",RES))
filesX
dim(SCORES)
source("ImportancePlot.R")
# R plots
# For our modified GNNexplainer #############################
#folder <- "graphs_5_18"
path       <- paste(folder,"/edge_index.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste(folder,"", sep="")
files  <- list.files(path2, full.names = TRUE)
#####################
# Node Importance
#####################
par(mfrow=c(2,1))
filesX  <- files[grep("gnn_feature_mask", files)]
RES <- vector("list", length(filesX))
for(xx in 1:length(filesX)){
RES[[xx]] <- read.csv(filesX[xx], header=FALSE)
}
SCORES <- t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
boxplot(SCORES, outline=FALSE, boxwex=0.4, 
color="white", names=0:(dim(SCORES)[2]-1), las=2, xlab="Nodes", 
ylab="Node Importance", col="cadetblue")
#####################
# Edge Importance
#####################
filesX  <- files[grep("gnn_edge_mask", files)]
RES <- vector("list", length(filesX))
for(xx in 1:length(filesX)){
RES[[xx]] <- read.csv(filesX[xx], header=FALSE)
}
SCORES <- t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
boxplot(SCORES, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, xlab="Edges", 
ylab="Edge Importance", col="coral3")
}dim(SCORES)
dim(SCORES)
length(edges)
edges
dim(SCORES)
edges_raw
length(edges_raw)
dim(SCORES)
dim(RES[[1]])
dim(RES[[2]])
dim(RES[[3]])
edges[,1:3]
edges_raw[,1:3]
dim(edges_raw)
length(edges)
# R plots
# For our modified GNNexplainer #############################
#folder <- "graphs_5_18"
path       <- paste(folder,"/edge_index.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste(folder,"", sep="")
files  <- list.files(path2, full.names = TRUE)
#####################
# Node Importance
#####################
par(mfrow=c(2,1))
filesX  <- files[grep("gnn_feature_mask", files)]
RES <- vector("list", length(filesX))
for(xx in 1:length(filesX)){
RES[[xx]] <- read.csv(filesX[xx], header=FALSE)
}
SCORES <- t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
boxplot(SCORES, outline=FALSE, boxwex=0.4, 
color="white", names=0:(dim(SCORES)[2]-1), las=2, xlab="Nodes", 
ylab="Node Importance", col="cadetblue")
#####################
# Edge Importance
#####################
filesX  <- files[grep("gnn_edge_mask", files)]
RES <- vector("list", length(filesX))
for(xx in 1:length(filesX)){
RES[[xx]] <- read.csv(filesX[xx], header=FALSE)
}
SCORES <- t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
boxplot(SCORES, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, xlab="Edges", 
ylab="Edge Importance", col="coral3")
}
dim(SCORES)
dim(edges_raw)
folder = "/home/bastian/LinkedOmics/KIRC"
path       <- paste(folder,"/edge_index.txt", sep="")
edges_raw  <- read.table(path)
edges  <- apply(edges_raw,2,function(x){paste(x[1],x[2],sep="-")})
path2  <- paste(folder,"", sep="")
files  <- list.files(path2, full.names = TRUE)
files
#####################
# Node Importance
#####################
par(mfrow=c(2,1))
filesX  <- files[grep("gnn_feature_mask", files)]
RES <- vector("list", length(filesX))
for(xx in 1:length(filesX)){
RES[[xx]] <- read.csv(filesX[xx], header=FALSE)
}
SCORES <- t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
boxplot(SCORES, outline=FALSE, boxwex=0.4, 
color="white", names=0:(dim(SCORES)[2]-1), las=2, xlab="Nodes", 
ylab="Node Importance", col="cadetblue")
dim(SCORES)
filesX  <- files[grep("gnn_edge_mask", files)]
RES <- vector("list", length(filesX))
for(xx in 1:length(filesX)){
RES[[xx]] <- read.csv(filesX[xx], header=FALSE)
}
SCORES <- t(do.call("cbind",RES))
#boxplot(SCORES, names=edges)
boxplot(SCORES, outline=FALSE, boxwex=0.4, 
color="white", names=edges, las=2, xlab="Edges", 
ylab="Edge Importance", col="coral3")
}
SCORES
plot(apply(SCORES,2,mean))
LOC
folder
read.table(paste(folder,"/communities.txt"))
read.table(paste(folder,"/communities.txt", sep=""))
test <- read.table(paste(folder,"/communities.txt", sep=""))

test <- read.table(paste(folder,"/communities.txt", sep=""), sep=",")
test <- read.table(paste(folder,"/communities.txt", sep=""), sep="\n")
test
test[[1]]
test[[1]][1]
test <- read.table(paste(folder,"/communities_scores.txt", sep=""), sep="\n")
tes
test
test <- read.table(paste(folder,"/communities.txt", sep=""), sep="\n")
length(test)
length(test[[1]])
test[[1]]
length(test[[1]])
scores <- read.table(paste(folder,"/communities_scores.txt", sep=""), sep="\n")
scores
scores <- read.table(paste(folder,"/communities_scores.txt", sep=""), sep="\n")
scores
test <- read.table(paste(folder,"/communities.txt", sep=""), sep="\n")
test <- read.table(paste(folder,"/communities.txt", sep=""), sep="\n")
test[[1]]
length(test[[1]])
q()
